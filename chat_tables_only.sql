-- Tabela para salas de chat entre usuário e doutor
create table public.chat_rooms (
  id bigint generated by default as identity not null,
  user_id bigint not null,
  doctor_id bigint not null,
  created_at timestamp with time zone null default now(),
  last_message_at timestamp with time zone null default now(),
  is_active boolean null default true,
  constraint chat_rooms_pkey primary key (id),
  constraint chat_rooms_user_id_fkey foreign key (user_id) references users (id) on delete cascade,
  constraint chat_rooms_doctor_id_fkey foreign key (doctor_id) references doctors (id) on delete cascade,
  constraint chat_rooms_unique_user_doctor unique (user_id, doctor_id)
) TABLESPACE pg_default;

-- Tabela para mensagens do chat
create table public.chat_messages (
  id bigint generated by default as identity not null,
  chat_room_id bigint not null,
  sender_id bigint not null,
  message text not null,
  message_type text null default 'text',
  is_read boolean null default false,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint chat_messages_pkey primary key (id),
  constraint chat_messages_chat_room_id_fkey foreign key (chat_room_id) references chat_rooms (id) on delete cascade,
  constraint chat_messages_sender_id_fkey foreign key (sender_id) references users (id) on delete cascade
) TABLESPACE pg_default;

-- Índices para otimizar as consultas
create index IF not exists idx_chat_rooms_user_id on public.chat_rooms using btree (user_id) TABLESPACE pg_default;
create index IF not exists idx_chat_rooms_doctor_id on public.chat_rooms using btree (doctor_id) TABLESPACE pg_default;
create index IF not exists idx_chat_messages_chat_room_id on public.chat_messages using btree (chat_room_id) TABLESPACE pg_default;
create index IF not exists idx_chat_messages_sender_id on public.chat_messages using btree (sender_id) TABLESPACE pg_default;
create index IF not exists idx_chat_messages_created_at on public.chat_messages using btree (created_at) TABLESPACE pg_default;

-- Função para atualizar o timestamp da última mensagem na sala de chat
create or replace function update_chat_room_last_message()
returns trigger as $$
begin
  update chat_rooms
  set last_message_at = new.created_at
  where id = new.chat_room_id;
  return new;
end;
$$ language plpgsql;

-- Trigger para atualizar automaticamente o timestamp da última mensagem
create trigger tr_update_chat_room_last_message
  after insert on chat_messages
  for each row
  execute function update_chat_room_last_message(); 