create table public.diary_entries (
  id bigint generated by default as identity not null,
  title text not null,
  description text null,
  mood text null default 'normal'::text,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null,
  constraint diary_entries_pkey primary key (id)
) TABLESPACE pg_default;

create table public.medication_confirmations (
  id bigint generated by default as identity not null,
  scheduled_time text not null,
  confirmation_date date not null,
  confirmation_time timestamp with time zone null default timezone ('utc'::text, now()),
  taken boolean not null default false,
  notes text null,
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  user_id bigint null,
  pill_id integer not null,
  constraint medication_confirmations_pkey primary key (id),
  constraint medication_confirmations_pill_id_fkey foreign KEY (pill_id) references pills_warning (id),
  constraint medication_confirmations_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;

create index IF not exists idx_medication_confirmations_date on public.medication_confirmations using btree (confirmation_date) TABLESPACE pg_default;

create table public.medication_schedule_times (
  id bigint generated by default as identity not null,
  scheduled_date date not null,
  scheduled_time time without time zone not null,
  complete_datetime timestamp with time zone not null,
  dosage text null,
  user_id bigint not null,
  pill_id integer not null,
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  status text null default 'pending'::text,
  notes text null,
  constraint medication_schedule_times_pkey primary key (id),
  constraint medication_schedule_pill_fkey foreign KEY (pill_id) references pills_warning (id) on delete CASCADE,
  constraint medication_schedule_user_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_medication_schedule_user_id on public.medication_schedule_times using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_medication_schedule_date on public.medication_schedule_times using btree (scheduled_date) TABLESPACE pg_default;

create trigger tr_check_duplicate_medication_schedule BEFORE INSERT
or
update on medication_schedule_times for EACH row
execute FUNCTION check_duplicate_medication_schedule ();

create table public.pills_warning (
  id integer not null,
  user_id bigint not null,
  titulo text null,
  quantidade_comprimidos integer null,
  quantidade_comprimidos_por_vez integer null,
  intervalo_horas integer null,
  horario_fixo text null,
  data_inicio text null,
  data_fim text null,
  status character varying null,
  constraint pills_warning_pkey primary key (id)
) TABLESPACE pg_default;

create table public.users (
  fingerprintid text null,
  fullname text not null,
  name text not null,
  password text not null,
  phone text null,
  role text not null,
  email text null,
  id bigserial not null,
  pfpimg text null,
  constraint users_pkey primary key (id)
) TABLESPACE pg_default;